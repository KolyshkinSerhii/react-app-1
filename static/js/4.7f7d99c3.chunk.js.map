{"version":3,"sources":["HOC/WithAuthRedirect.js","Components/Dialogs/Dialogs.module.css","Components/Dialogs/DialogItem/DialogItem.jsx","Components/Dialogs/Message/Message.jsx","Components/Dialogs/Message/DialogsForm/SendMessageForm.jsx","Components/Dialogs/Dialogs.jsx","Components/Dialogs/DialogsContainer.jsx"],"names":["mapStateToPropsForRedirect","state","isAuth","auth","withAuthRedirect","Component","RedirectComponent","this","props","to","React","connect","module","exports","DialogItem","path","id","className","s","dialog","name","Message","messages","message","maxLength100","maxLengthCreator","SendMessageReduxForm","reduxForm","form","onSubmit","handleSubmit","Field","placeholder","component","Textarea","validate","required","SendMessage","value","sendNewMessage","newMessageBody","onSubmitSuccess","formValues","dispatch","reset","Dialogs","messagesPage","dialogsElements","dialogs","map","messageElements","m","dialogs_item","compose","actions","sendMessageCreator"],"mappings":"wNAIIA,EAA6B,SAACC,GAAD,MAAY,CACzCC,OAAQD,EAAME,KAAKD,SAGVE,EAAmB,SAACC,GAAe,IAEtCC,EAFqC,uKAInC,OAAKC,KAAKC,MAAMN,OAET,kBAACG,EAAcE,KAAKC,OAFI,kBAAC,IAAD,CAAUC,GAAG,eAJT,GAEXC,IAAML,WAStC,OAFiCM,YAAQX,EAARW,CAAoCL,K,oBChBzEM,EAAOC,QAAU,CAAC,QAAU,yBAAyB,aAAe,8BAA8B,SAAW,4B,6JCc9FC,EAXI,SAACN,GAChB,IAAIO,EAAO,YAAcP,EAAMQ,GAE/B,OACI,yBAAKC,UAAWC,IAAEC,QACd,kBAAC,IAAD,CAASV,GAAIM,GAAOP,EAAMY,Q,kBCEvBC,EARC,SAACb,GACb,OACI,yBAAKS,UAAWC,IAAEI,UACd,yBAAKL,UAAWC,IAAEK,SAAUf,EAAMe,W,yCCD1CC,EAAeC,YAAiB,KAiC9BC,EAAuBC,YAAU,CAAEC,KAAM,0BAAlBD,EAbL,SAACnB,GACrB,OACQ,0BAAMqB,SAAUrB,EAAMsB,cAClB,6BACI,kBAACC,EAAA,EAAD,CAAOC,YAAa,qBAAsBZ,KAAM,iBAAkBa,UAAWC,IAAUC,SAAU,CAACC,IAAUZ,MAEhH,6BACI,qDAQLa,EAjCK,SAAC7B,GAUjB,OACI,6BACI,kBAACkB,EAAD,CAAsBG,SAVd,SAACS,GACjB9B,EAAM+B,eAAeD,EAAME,iBAUCC,gBAPR,SAACC,EAAYC,GACjCA,EAASC,YAAO,gCCeLC,EArBC,SAACrC,GAEb,IAAIP,EAAQO,EAAMsC,aAEdC,EAAkB9C,EAAM+C,QAAQC,KAAI,SAAA9B,GAAM,OAAI,kBAAC,EAAD,CAAYC,KAAMD,EAAOC,KAAMJ,GAAIG,EAAOH,QAExFkC,EAAkBjD,EAAMqB,SAAS2B,KAAI,SAAAE,GAAC,OAAI,kBAAC,EAAD,CAAS5B,QAAS4B,EAAE5B,aAElE,OACI,yBAAKN,UAAWC,IAAE8B,SACd,yBAAK/B,UAAWC,IAAEkC,cACbL,GAEL,yBAAK9B,UAAWC,IAAEI,UACb4B,EACD,kBAAC,EAAD,CAAaX,eAAgB/B,EAAM+B,oB,wBCHpCc,sBACX1C,aAdkB,SAACV,GACnB,MAAO,CACP6C,aAAc7C,EAAM6C,iBAGC,SAACH,GACtB,MAAO,CACHJ,eAAgB,SAAAC,GACZG,EAASW,IAAQC,mBAAmBf,SAO5CpC,IAFWiD,CAGZR","file":"static/js/4.7f7d99c3.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux'\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n    \r\n    class RedirectComponent extends React.Component {\r\n        render () {\r\n            if (!this.props.isAuth) return <Redirect to='/login' />\r\n            \r\n            return <Component {...this.props} />\r\n        }\r\n    }\r\n    let ConnectedRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent)\r\n\r\n    return ConnectedRedirectComponent;\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__2ek4g\",\"dialogs_item\":\"Dialogs_dialogs_item__3V7Nx\",\"messages\":\"Dialogs_messages__3Hryw\"};","import React from 'react';\r\nimport s from \"./DialogItem.module.css\";\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst DialogItem = (props) => {\r\n    let path = \"/dialogs/\" + props.id;\r\n\r\n    return (\r\n        <div className={s.dialog}>\r\n            <NavLink to={path}>{props.name}</NavLink>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default DialogItem;","import React from 'react';\r\nimport s from \"./Message.module.css\";\r\n\r\nconst Message = (props) => {\r\n    return (\r\n        <div className={s.messages}>\r\n            <div className={s.message}>{props.message}</div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Message;","import React from 'react';\r\nimport { reduxForm, Field, reset } from 'redux-form';\r\nimport { Textarea } from '../../../common/ControlForms';\r\nimport required, { maxLengthCreator } from '../../../../Utilities/Validation/Validator';\r\n\r\nlet maxLength100 = maxLengthCreator(100)\r\n\r\nconst SendMessage = (props) => {\r\n\r\nlet addNewMessage = (value) => {\r\n    props.sendNewMessage(value.newMessageBody);\r\n}\r\n\r\nconst onSubmitSuccess = (formValues, dispatch) => {\r\n    dispatch(reset ('dialogsSendMessageForm'));\r\n}\r\n\r\n    return (\r\n        <div>\r\n            <SendMessageReduxForm onSubmit={addNewMessage}\r\n                                onSubmitSuccess={onSubmitSuccess}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst SendMessageForm = (props) => {\r\n    return (\r\n            <form onSubmit={props.handleSubmit}>\r\n                <div>\r\n                    <Field placeholder={\"Enter your message\"} name={'newMessageBody'} component={Textarea} validate={[required, maxLength100]}></Field>\r\n                </div>\r\n                <div>\r\n                    <button>Send message</button>\r\n                </div>\r\n            </form>\r\n    )\r\n}\r\n\r\nconst SendMessageReduxForm = reduxForm({ form: 'dialogsSendMessageForm' }) (SendMessageForm)\r\n\r\nexport default SendMessage;","import React from 'react';\r\nimport s from \"./Dialogs.module.css\";\r\nimport DialogItem from './DialogItem/DialogItem';\r\nimport Message from './Message/Message';\r\nimport SendMessage from './Message/DialogsForm/SendMessageForm';\r\n\r\n\r\n\r\nconst Dialogs = (props) => {\r\n\r\n    let state = props.messagesPage;\r\n\r\n    let dialogsElements = state.dialogs.map(dialog => <DialogItem name={dialog.name} id={dialog.id} />);\r\n\r\n    let messageElements = state.messages.map(m => <Message message={m.message} />);\r\n    \r\n    return (\r\n        <div className={s.dialogs}>\r\n            <div className={s.dialogs_item}>\r\n                {dialogsElements}\r\n            </div>\r\n            <div className={s.messages}>\r\n                {messageElements}\r\n                <SendMessage sendNewMessage={props.sendNewMessage} />\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Dialogs;","import { actions} from '../../Redux/Messages-reducer';\r\nimport Dialogs from './Dialogs';\r\nimport { connect } from 'react-redux';\r\nimport { compose } from 'redux'\r\nimport { withAuthRedirect } from '../../HOC/WithAuthRedirect';\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n    messagesPage: state.messagesPage\r\n    }\r\n}\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        sendNewMessage: newMessageBody => {\r\n            dispatch(actions.sendMessageCreator(newMessageBody));\r\n        }\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    withAuthRedirect\r\n) (Dialogs)"],"sourceRoot":""}